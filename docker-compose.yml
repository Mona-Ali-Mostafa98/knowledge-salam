version: "3.7"
services:
    app:
        build:
            args:
                user: salam
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: knowlede
        container_name: knowledge-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ./docker-compose/php/conf/custom.php.ini:/usr/local/etc/php/conf.d/custom.ini
        networks:
            - knowledge

    nginx:
        image: nginx:alpine
        container_name: knowledge-nginx
        restart: unless-stopped
        ports:
            - 8092:80
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx:/etc/nginx/conf.d/
        networks:
            - knowledge
            - npmanager_default
    db:
        image: mysql:8.0
        container_name: knowledge-db
        restart: unless-stopped
        volumes:
            - ./data/mysql:/var/lib/mysql/
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - knowledge

    phpmyadmin:
        image: 'phpmyadmin:latest'
        container_name: knowledge-phpmyadmin
        ports:
            - 8093:80
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
        links:
            - "db:db"
        depends_on:
            - db
        networks:
            - knowledge


networks:
    knowledge:
        driver: bridge
    knowledge_knowledge:
        external: true
    npmanager_default:
        external: true
